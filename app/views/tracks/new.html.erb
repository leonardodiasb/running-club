<div>
  <p>WATCH:</p>
  <p id="stopwatch">00:00:00</p>
</div>
<button id="start" onclick="getLocationUpdate()">Start</button>
<button id="stop" onclick="stopWatch()">Stop</button>
<button id="clear" onclick="clearStorage()">Clear</button>

<%= form_with model: @track, url: user_tracks_path(@user.id), method: :post do |f| %>
  <%= f.label :extra %>
  <%= f.text_field :extra %>

  <%= f.hidden_field :time, id:'time' %>

  <div id='lat-div'></div>
  <div id='long-div'></div>
  <div id='timestp-div'></div>
  <div id='speed-div'></div>
  <div id='accuracy-div'></div>
  <div id='altitude-div'></div>
  <div id='altitude_accuracy-div'></div>
  <div id='error'></div>

  <%= f.submit "Save" %>
<% end %>

<script>
  var watchID;
  var geoLoc;

  const timer = document.getElementById('stopwatch');
  var hr = 0;
  var min = 0;  
  var sec = 0;  
  var stoptime = true;  

  var latitude = [];
  var longitude = [];
  var timestp = [];
  var speed = [];
  var altitude = [];
  var accuracy = [];
  var altitude_accuracy = [];

  function getLocationUpdate() {
    if(navigator.geolocation){
      geoLoc = navigator.geolocation;
      watchID = geoLoc.watchPosition(data => {
        if (stoptime == true) {
          stoptime = false;
          timerCycle();
        }
        console.log(data);
        console.log(speed);
        latitude.push(data.coords.latitude);
        longitude.push(data.coords.longitude);
        timestp.push(data.timestamp);
        if(data.coords.speed) {
          speed.push(data.coords.speed);
        }
        if(data.coords.altitude) {
          altitude.push(data.coords.altitude);
        }
        if(data.coords.accuracy) {
          accuracy.push(data.coords.accuracy);
        }
        if(data.coords.altitude_accuracy) {
          altitude_accuracy.push(data.coords.altitude_accuracy);
        }
        window.localStorage.setItem('latitude',JSON.stringify(latitude));
        window.localStorage.setItem('longitude',JSON.stringify(longitude));
      }, (error) => {
        console.log(error);
        var err = document.getElementById('error').appendChild(
          document.createElement('div')
        )
        err.innerHTML = 'Error code:' + error.code + ' Error message:' + error.message;
      },
      {
        enableHighAccuracy: true,
      });
    } else {
        alert("Sorry, browser does not support geolocation!");
    }
  }

  function stopWatch() {
    if (stoptime == false) {
      stoptime = true;
    }
    geoLoc.clearWatch(watchID);
    const len = latitude.length;
    for(var i = 0; i < len; i++) {
      var lat = document.getElementById('lat-div').appendChild(
          document.createElement('input')
      )
      lat.value = [latitude[i]];
      lat.id = 'track_latitude';
      lat.name = 'track[latitude][]';
      lat.type = 'hidden';
      lat.step = 'any';

      var long = document.getElementById('long-div').appendChild(
          document.createElement('input')
      )
      long.value = longitude[i];
      long.id = 'track_longitude';
      long.name = 'track[longitude][]';
      long.type = 'hidden';
      long.step = 'any';

      var tmstp = document.getElementById('timestp-div').appendChild(
          document.createElement('input')
      )
      tmstp.value = timestp[i];
      tmstp.id = 'track_timestp';
      tmstp.name = 'track[timestp][]';
      tmstp.type = 'hidden';
      tmstp.step = 'any';

      if(speed.length > 0) {
        var spd = document.getElementById('speed-div').appendChild(
            document.createElement('input')
        )
        spd.value = speed[i];
        spd.id = 'track_speed';
        spd.name = 'track[speed][]';
        spd.type = 'hidden';
        spd.step = 'any';
      }

      if(altitude.length > 0) {
        var alt = document.getElementById('altitude-div').appendChild(
            document.createElement('input')
        )
        alt.value = altitude[i];
        alt.id = 'track_altitude';
        alt.name = 'track[altitude][]';
        alt.type = 'hidden';
        alt.step = 'any';
      }

      if(accuracy.length > 0) {
        var acc = document.getElementById('accuracy-div').appendChild(
            document.createElement('input')
        )
        acc.value = accuracy[i];
        acc.id = 'track_accuracy';
        acc.name = 'track[accuracy][]';
        acc.type = 'hidden';
        acc.step = 'any';
      }

      if(altitude_accuracy.length > 0) {
        var alt_acc = document.getElementById('altitude_accuracy-div').appendChild(
            document.createElement('input')
        )
        alt_acc.value = altitude_accuracy[i];
        alt_acc.id = 'track_altitude_accuracy';
        alt_acc.name = 'track[altitude_accuracy][]';
        alt_acc.type = 'hidden';
        alt_acc.step = 'any';
      }
    }
    document.getElementById('time').value = sec + (min * 60) + (hr * 3600);
  }

  function timerCycle() {
    if (stoptime == false) {
      sec = parseInt(sec);
      min = parseInt(min);
      hr = parseInt(hr);

      sec = sec + 1;

      if (sec == 60) {
        min = min + 1;
        sec = 0;
      }
      if (min == 60) {
        hr = hr + 1;
        min = 0;
        sec = 0;
      }

      if (sec < 10 || sec == 0) {
        sec = '0' + sec;
      }
      if (min < 10 || min == 0) {
        min = '0' + min;
      }
      if (hr < 10 || hr == 0) {
        hr = '0' + hr;
      }

      timer.innerHTML = hr + ':' + min + ':' + sec;

      setTimeout("timerCycle()", 1000);
    }
  }

  function clearStorage() {
    latitude = [];
    longitude = [];
    window.localStorage.setItem('latitude',JSON.stringify(latitude));
    window.localStorage.setItem('longitude',JSON.stringify(longitude));
    timer.innerHTML = '00:00:00';
    hr = 0;
    min = 0;  
    sec = 0;
  }
</script>
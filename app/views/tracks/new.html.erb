<%= link_to root_url do %>
  <p>BACK</p>
<% end %>
<div>
  <p>WATCH:</p>
  <p id="stopwatch">00:00:00</p>
  <p>DISTANCE:</p>
  <p id="distance-box">0m</p>
</div>
<button id="start" onclick="getLocationUpdate()">Start</button>
<button id="stop" style="display: none;" onclick="stopWatch()">Stop</button>

<%= form_with model: @track, url: user_tracks_path(@user.id), method: :post do |f| %>
  <%= f.hidden_field :name, id:'name' %>
  <%= f.hidden_field :time, id:'time' %>
  <%= f.hidden_field :coords, id:'coords' %>
  <%= f.hidden_field :distance, id:'distance' %>

  <div id='speed-div' style="display: none;"></div>
  
  <%= f.submit "Save", id: 'save', style: 'display: none;' %>
<% end %>

<script>
  var watchID;
  var geoLoc;
  const startBtn = document.getElementById('start');
  const stopBtn = document.getElementById('stop');
  const saveBtn = document.getElementById('save');

  const timer = document.getElementById('stopwatch');
  var hr = 0;
  var min = 0;  
  var sec = 0;  
  var stoptime = true;  

  var speed = [];

  const dbox = document.getElementById('distance-box');
  var dist = 0;
  var lat1 = 0;
  var long1 = 0;

  var coords = [];

  const date = new Date();
  const dateDay = date.getDay();
  const dateHour = date.getHours();
  var day = '';
  var hour = '';

  switch(dateDay) {
    case 1:
     day = 'Monday ';
     break
    case 2:
     day = 'Tuesday ';
     break
    case 3:
     day = 'Wednesday ';
     break
    case 4:
     day = 'Thrusday ';
     break
    case 5:
     day = 'Friday ';
     break
    case 6:
     day = 'Saturday ';
     break
    case 7:
     day = 'Sunday ';
  }

  if(dateHour >= 5 && dateHour <= 11) {
    hour = 'Morning ';
  }

  if(dateHour >= 12 && dateHour <=16) {
    hour = 'Afternoon ';
  }

  if(dateHour >= 17 && dateHour <= 20) {
    hour = 'Evening ';
  }

  if(dateHour >= 21 || dateHour <= 4) {
    hour = 'Night ';
  }

  function getLocationUpdate() {
    if(navigator.geolocation){
      geoLoc = navigator.geolocation;
      toggle();
      watchID = geoLoc.watchPosition(data => {
        if (stoptime == true) {
          stoptime = false;
          timerCycle();
        }
        console.log(data);
        coords.push([data.coords.longitude, data.coords.latitude]);
        if(data.coords.speed) {
          speed.push(data.coords.speed);
        }
        if((lat1 !== 0) && (long1 !== 0)) {
          distance(lat1, data.coords.latitude, long1, data.coords.longitude)
        }
        lat1 = data.coords.latitude;
        long1 = data.coords.longitude;
      }, (error) => console.log(error),
      {
        enableHighAccuracy: true,
      });
    } else {
        alert("Sorry, browser does not support geolocation!");
    }
  }

  function stopWatch() {
    if (stoptime == false) {
      stoptime = true;
    }
    geoLoc.clearWatch(watchID);
    toggle();
    const len = speed.length;
    if(speed.length > 0) {
      for(var i = 0; i < len; i++) {
        var spd = document.getElementById('speed-div').appendChild(
            document.createElement('input')
        )
        spd.value = speed[i];
        spd.id = 'track_speed';
        spd.name = 'track[speed][]';
        spd.type = 'hidden';
        spd.step = 'any';
      }
    }
    document.getElementById('time').value = (sec * 1) + (min * 60) + (hr * 3600);
    console.log(coords);
    console.log(JSON.stringify(coords));
    document.getElementById('distance').value = dist;
    document.getElementById('coords').value = JSON.stringify(coords);
    document.getElementById('name').value = day + hour + 'Run';
  }

  function timerCycle() {
    if (stoptime == false) {
      sec = parseInt(sec);
      min = parseInt(min);
      hr = parseInt(hr);

      sec = sec + 1;

      if (sec == 60) {
        min = min + 1;
        sec = 0;
      }
      if (min == 60) {
        hr = hr + 1;
        min = 0;
        sec = 0;
      }

      if (sec < 10 || sec == 0) {
        sec = '0' + sec;
      }
      if (min < 10 || min == 0) {
        min = '0' + min;
      }
      if (hr < 10 || hr == 0) {
        hr = '0' + hr;
      }

      timer.innerHTML = hr + ':' + min + ':' + sec;

      setTimeout("timerCycle()", 1000);
    }
  }
 
  function distance(lat1, lat2, long1, long2) {
    if((lat1 == lat2) && (long1 == long2)) {
      dist += 0;
    } else {
      const R = 6371e3;
      var φ1 = lat1 * Math.PI/180;
      var φ2 = lat2 * Math.PI/180;
      var Δφ = (lat2 - lat1) * Math.PI/180;
      var Δλ = (long2 - long1) * Math.PI/180;
      var a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +
        Math.cos(φ1) * Math.cos(φ2) *
        Math.sin(Δλ/2) * Math.sin(Δλ/2);
      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));

      var d = R * c;
      dist += d;
    }
    dbox.innerHTML = Math.floor(dist) + 'm';
  }

  function toggle() {
    if (start.style.display === 'none') {
      startBtn.style.display = 'block';
      stopBtn.style.display = 'none';
      saveBtn.style.display = 'block';
    } else {
      startBtn.style.display = 'none';
      stopBtn.style.display = 'block';
      saveBtn.style.display = 'none';
    }
  }
</script>